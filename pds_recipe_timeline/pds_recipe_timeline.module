<?php

use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_theme().
 *
 * Exposes the twig template "pds-timeline.html.twig" as theme hook "pds_timeline".
 * Declares variable "events" so Twig can loop.
 */
function pds_recipe_timeline_theme($existing, $type, $theme, $path) {
  return [
    'pds_timeline' => [
      'template' => 'pds-timeline', // templates/pds-timeline.html.twig
      'path' => $path . '/templates',
      'variables' => [
        'events' => [],
      ],
    ],
  ];
}

/**
 * AJAX callback to return just the timeline_ui container.
 * Works for both normal block config and Layout Builder modal.
 */
function pds_recipe_timeline_ajax_events(array &$form, FormStateInterface $form_state) {
  if (isset($form['settings']['timeline_ui'])) {
    return $form['settings']['timeline_ui'];
  }
  if (isset($form['timeline_ui'])) {
    return $form['timeline_ui'];
  }
  return $form;
}

/**
 * "Add event" submit handler.
 */
function pds_recipe_timeline_add_event_submit(array &$form, FormStateInterface $form_state): void {
  //1.- Detect Layout Builder vs normal block edit so we know the value path.
  $base_key = isset($form['settings']) ? ['settings', 'timeline_ui', 'events'] : ['timeline_ui', 'events'];

  //2.- Attempt to pull current table rows and fallback to working copy.
  $events = $form_state->getValue($base_key);
  if (!is_array($events) || $events === []) {
    $snapshot = $form_state->get('working_events');
    $events = is_array($snapshot) ? $snapshot : [];
  }

  //3.- Append a blank event row ready for author input.
  $events[] = [
    'year' => '',
    'headline' => '',
    'summary' => '',
    'cta_label' => '',
    'cta_url' => '',
    'remove' => 0,
  ];

  //4.- Persist updated rows into form_state and working snapshot for AJAX flows.
  $form_state->setValue($base_key, $events);
  $form_state->set('working_events', $events);
  $form_state->setRebuild(TRUE);
}

/**
 * "Remove selected" submit handler.
 */
function pds_recipe_timeline_remove_selected_submit(array &$form, FormStateInterface $form_state): void {
  //1.- Identify the correct value key depending on Layout Builder context.
  $base_key = isset($form['settings']) ? ['settings', 'timeline_ui', 'events'] : ['timeline_ui', 'events'];

  //2.- Read rows either from submitted values or the working snapshot.
  $events = $form_state->getValue($base_key);
  if (!is_array($events) || $events === []) {
    $snapshot = $form_state->get('working_events');
    $events = is_array($snapshot) ? $snapshot : [];
  }

  //3.- Filter rows whose "remove" checkbox is unchecked.
  $events = array_values(array_filter($events, static function ($row) {
    return is_array($row) && empty($row['remove']);
  }));

  //4.- Save filtered list back for both rebuild and future operations.
  $form_state->setValue($base_key, $events);
  $form_state->set('working_events', $events);
  $form_state->setRebuild(TRUE);
}