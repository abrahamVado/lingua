<?php

/**
 * @file
 * Provides helper hooks for the PDS Suite module.
 */

/**
 * Implements hook_help().
 */
function pds_suite_help($route_name, \Drupal\Core\Routing\RouteMatchInterface $route_match) {
  //1.- Provide a concise description for administrators viewing module help.
  if ($route_name === 'help.page.pds_suite') {
    //2.- Return translated text describing the module scope.
    return t('The PDS Suite module bundles custom recipes, content models, menus, and an API for PDS experiences.');
  }
  //3.- Return nothing when help is requested elsewhere.
  return NULL;
}

/**
 * Implements hook_theme().
 */
function pds_suite_theme(): array {
  //1.- Declare every recipe component with its template and modifier class.
  $components = [
    'pds_actionable_insights' => [
      'template' => 'pds-actionable-insights',
      'modifier' => 'recipe-component--actionable-insights',
    ],
    'pds_carousel_trajectory' => [
      'template' => 'pds-carousel-trajectory',
      'modifier' => 'recipe-component--carousel-trajectory',
    ],
    'pds_contact_form' => [
      'template' => 'pds-contact-form',
      'modifier' => 'recipe-component--contact-form',
    ],
    'pds_country_selection' => [
      'template' => 'pds-country-selection',
      'modifier' => 'recipe-component--country-selection',
    ],
    'pds_experts_cards' => [
      'template' => 'pds-experts-cards',
      'modifier' => 'recipe-component--experts-cards',
    ],
    'pds_financial_education' => [
      'template' => 'pds-financial-education',
      'modifier' => 'recipe-component--financial-education',
    ],
    'pds_investment_strategies' => [
      'template' => 'pds-investment-strategies',
      'modifier' => 'recipe-component--investment-strategies',
    ],
    'pds_latest_insights' => [
      'template' => 'pds-latest-insights',
      'modifier' => 'recipe-component--latest-insights',
    ],
    'pds_map' => [
      'template' => 'pds-map',
      'modifier' => 'recipe-component--map',
    ],
    'pds_market_perspective' => [
      'template' => 'pds-market-perspective',
      'modifier' => 'recipe-component--market-perspective',
    ],
    'pds_modal_pageout' => [
      'template' => 'pds-modal-pageout',
      'modifier' => 'recipe-component--modal-pageout',
    ],
    'pds_principal_executives' => [
      'template' => 'pds-principal-executives',
      'modifier' => 'recipe-component--principal-executives',
    ],
    'pds_receive_updates' => [
      'template' => 'pds-receive-updates',
      'modifier' => 'recipe-component--receive-updates',
    ],
    'pds_regulatory_notices' => [
      'template' => 'pds-regulatory-notices',
      'modifier' => 'recipe-component--regulatory-notices',
    ],
    'pds_timeline' => [
      'template' => 'pds-timeline',
      'modifier' => 'recipe-component--timeline',
    ],
    'pds_video_button' => [
      'template' => 'pds-video-button',
      'modifier' => 'recipe-component--video-button',
    ],
    'pds_ways_to_invest' => [
      'template' => 'pds-ways-to-invest',
      'modifier' => 'recipe-component--ways-to-invest',
    ],
    'pds_weekly_insights' => [
      'template' => 'pds-weekly-insights',
      'modifier' => 'recipe-component--weekly-insights',
    ],
  ];

  //2.- Establish the common variable structure shared by all recipe templates.
  $variables = [
    'attributes' => [],
    'title' => '',
    'description' => '',
    'items' => [],
    'cta' => NULL,
  ];

  //3.- Assemble the theme definitions and attach the shared preprocess callback.
  $definitions = [];
  foreach ($components as $key => $info) {
    $definitions[$key] = [
      'variables' => $variables,
      'template' => $info['template'],
      'preprocess functions' => ['pds_suite_preprocess_recipe_component'],
    ];
  }

  return $definitions;
}

/**
 * Shared preprocess callback for recipe components.
 */
function pds_suite_preprocess_recipe_component(array &$vars, string $hook = ''): void {
  //1.- Normalise the attribute array into an Attribute object for class handling.
  $attributes = $vars['attributes'] ?? [];
  if ($attributes instanceof \Drupal\Core\Template\Attribute) {
    $attribute_object = $attributes;
  }
  else {
    if (!is_array($attributes)) {
      $attributes = [];
    }
    $attribute_object = new \Drupal\Core\Template\Attribute($attributes);
  }

  //2.- Add the base component class and recipe-specific modifier.
  $attribute_object->addClass('recipe-component');
  $modifier_map = [
    'pds_actionable_insights' => 'recipe-component--actionable-insights',
    'pds_carousel_trajectory' => 'recipe-component--carousel-trajectory',
    'pds_contact_form' => 'recipe-component--contact-form',
    'pds_country_selection' => 'recipe-component--country-selection',
    'pds_experts_cards' => 'recipe-component--experts-cards',
    'pds_financial_education' => 'recipe-component--financial-education',
    'pds_investment_strategies' => 'recipe-component--investment-strategies',
    'pds_latest_insights' => 'recipe-component--latest-insights',
    'pds_map' => 'recipe-component--map',
    'pds_market_perspective' => 'recipe-component--market-perspective',
    'pds_modal_pageout' => 'recipe-component--modal-pageout',
    'pds_principal_executives' => 'recipe-component--principal-executives',
    'pds_receive_updates' => 'recipe-component--receive-updates',
    'pds_regulatory_notices' => 'recipe-component--regulatory-notices',
    'pds_timeline' => 'recipe-component--timeline',
    'pds_video_button' => 'recipe-component--video-button',
    'pds_ways_to_invest' => 'recipe-component--ways-to-invest',
    'pds_weekly_insights' => 'recipe-component--weekly-insights',
  ];
  $active_hook = $hook ?: ($vars['theme_hook_original'] ?? '');
  if (isset($modifier_map[$active_hook])) {
    $attribute_object->addClass($modifier_map[$active_hook]);
  }

  //3.- Guarantee that downstream templates receive the updated attribute object.
  $vars['attributes'] = $attribute_object;

  //4.- Ensure the CTA array always has both label and url keys when provided.
  if (!empty($vars['cta']) && is_array($vars['cta'])) {
    $vars['cta'] += [
      'label' => '',
      'url' => '#',
    ];
  }
}
